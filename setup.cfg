[bumpversion]
current_version = 0.3.0
commit = True
tag = True
tag_name = {new_version}
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)
serialize = {major}.{minor}.{patch}

[bumpversion:file:CHANGES.md]
search = 
	[Unreleased](https://github.com/crim-ca/ncml2stac/tree/master) (latest)
	------------------------------------------------------------------------------------------------------------------
replace = 
	[Unreleased](https://github.com/crim-ca/ncml2stac/tree/master) (latest)
	------------------------------------------------------------------------------------------------------------------
	
	<!-- list changes here, using '-' for each new entry, remove this when items are added -->
	
	[{new_version}](https://github.com/crim-ca/ncml2stac/tree/{new_version}) ({utcnow:%%Y-%%m-%%d})
	------------------------------------------------------------------------------------------------------------------

[bumpversion:file:Makefile]
search = APP_VERSION := {current_version}
replace = APP_VERSION := {new_version}

[bumpversion:file:README.md]
search = {current_version}
replace = {new_version}

[tool:pytest]
addopts = 
	--strict-markers
	--tb=native
	--ignore=tests/smoke
	--nb-test-files
log_cli = false
log_level = INFO
python_files = test_*.py,notebooks/*
markers = 
	cli: mark test as related to CLI operations
	notebooks: mark test as related to a Jupyter Notebook
filterwarnings = 
	ignore:.*geojson\.org.*:urllib3.exceptions.InsecureRequestWarning
	ignore:.*iana\.org.*:urllib3.exceptions.InsecureRequestWarning
nb_diff_ignore = 
	/metadata
	/cells/*/execution_count
	/cells/*/outputs/*/execution_count
	/cells/4/outputs/0/text
	/cells/5/outputs/
	/cells/7/outputs/
nb_diff_replace = 
	/cells/6/outputs/0/text '<attribute name="metadata_creation" value="[\d-]+" />' METADATA_CREATION_DATE
	/cells/6/outputs/0/text \n+ \n

[isort]
line_length = 120
multi_line_output = 3
lines_between_types = 0
lines_between_sections = 1
combine_as_imports = true
order_by_type = true
classes = CWL,JSON,KVP,IO
treat_all_comments_as_code = true
default_section = THIRDPARTY
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
extra_standard_library = posixpath,typing,typing_extensions
known_third_party = docker,mock
known_first_party = ncml2stac,tests
skip = *.egg*,build,env,src,venv,reports,node_modules

[bandit]
skips = B101,B320,B410
exclude = *.egg-info,./build,./dist,./env,./tests,test_*
targets = .

[flake8]
ignore = E126,E226,E402,F401,W503,W504,B007,B009,B010,B023
max-line-length = 120
exclude = 
	src,
	.git,
	__pycache__,
	docs,
	build,
	dist,
	eggs,
	env,
	parts,
	examples,

[doc8]
max-line-length = 120
ignore-path = docs/build,docs/source/autoapi

[docformatter]
recursive = true
wrap-descriptions = 0
wrap-summaries = 120
make-summary-multi-line = True
pre-summary-newline = True

[pydocstyle]
add_ignore = D100,D101,D102,D103,D104,D105,D107,D200,D202,D204,D212,D401
add_select = D201,D213

[pylint]

[coverage:run]
branch = true
source = ./
include = *
omit = 
	setup.py
	docs/*
	tests/*
	*_mako

[coverage:report]
exclude_lines = 
	pragma: no cover
	raise OSError
	raise AssertionError
	raise NotImplementedError
	if TYPE_CHECKING:
	if __name__ == "__main__":
	LOGGER.debug
	LOGGER.info
	LOGGER.warning
	LOGGER.error
	LOGGER.exception
	LOGGER.log
	self.logger.debug
	self.logger.info
	self.logger.warning
	self.logger.error
	self.logger.exception
	self.logger.log
	@overload
